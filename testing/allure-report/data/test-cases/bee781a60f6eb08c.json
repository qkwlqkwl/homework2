{
  "uid" : "bee781a60f6eb08c",
  "name" : "test_mul[mul(int1)]",
  "fullName" : "test_calc_new1.TestCalc#test_mul",
  "historyId" : "93852329481a631c1dec70f99f62bc68",
  "time" : {
    "start" : 1613648642783,
    "stop" : 1613648642784,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 8 == 7\n  +8\n  -7",
  "statusTrace" : "self = <testing.test_calc_new1.TestCalc object at 0x0000022F6330C1F0>, get_calc = <python_code.calc.Calculator object at 0x0000022F632860A0>, a = 4, b = 2\nexpect = 7\n\n    @pytest.mark.run(order=3)\n    @allure.story(\"测试乘法\")\n    # 加法测试用例，使用parametrize参数化\n    @pytest.mark.parametrize('a,b,expect', mul_datas, ids=mul_myid)\n    def test_mul(self, get_calc, a, b, expect):\n        with allure.step(\"计算两个数的相乘\"):\n            result = get_calc.mul(a, b)\n            # 判断result是浮点数，做出保留2位小数的处理\n            if isinstance(result, float):\n                result = round(result, 2)\n>       assert result == expect\nE       assert 8 == 7\nE         +8\nE         -7\n\ntest_calc_new1.py:101: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "get_calc",
    "time" : {
      "start" : 1613648642651,
      "stop" : 1613648642651,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 8 == 7\n  +8\n  -7",
    "statusTrace" : "self = <testing.test_calc_new1.TestCalc object at 0x0000022F6330C1F0>, get_calc = <python_code.calc.Calculator object at 0x0000022F632860A0>, a = 4, b = 2\nexpect = 7\n\n    @pytest.mark.run(order=3)\n    @allure.story(\"测试乘法\")\n    # 加法测试用例，使用parametrize参数化\n    @pytest.mark.parametrize('a,b,expect', mul_datas, ids=mul_myid)\n    def test_mul(self, get_calc, a, b, expect):\n        with allure.step(\"计算两个数的相乘\"):\n            result = get_calc.mul(a, b)\n            # 判断result是浮点数，做出保留2位小数的处理\n            if isinstance(result, float):\n                result = round(result, 2)\n>       assert result == expect\nE       assert 8 == 7\nE         +8\nE         -7\n\ntest_calc_new1.py:101: AssertionError",
    "steps" : [ {
      "name" : "计算两个数的相乘",
      "time" : {
        "start" : 1613648642784,
        "stop" : 1613648642784,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "测试乘法"
  }, {
    "name" : "feature",
    "value" : "测试计算器"
  }, {
    "name" : "tag",
    "value" : "run(order=3)"
  }, {
    "name" : "suite",
    "value" : "test_calc_new1"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc"
  }, {
    "name" : "host",
    "value" : "DESKTOP-IRDV9UJ"
  }, {
    "name" : "thread",
    "value" : "4864-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_calc_new1"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "a",
    "value" : "4"
  }, {
    "name" : "b",
    "value" : "2"
  }, {
    "name" : "expect",
    "value" : "7"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=3)" ]
  },
  "source" : "bee781a60f6eb08c.json",
  "parameterValues" : [ "4", "2", "7" ]
}